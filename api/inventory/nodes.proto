syntax = "proto3";

package inventory;

import "google/api/annotations.proto";

// GenericNode represents Node without more specialized type.
message GenericNode {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  // Hostname. Is not unique. May be empty.
  string hostname = 3;
}

// RemoteNode represents a generic remote Node.
// Agents can't be run on remote Nodes.
message RemoteNode {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  reserved 3; // hostname
}

// AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.
message AmazonRDSRemoteNode {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name. Can't be empty.
  string name = 2;
  // Hostname. Unique in combination with region. Can't be empty.
  string hostname = 3;
  // AWS region. Unique in combination with hostname. Can't be empty.
  string region = 4;
}

message ListNodesRequest {}

message ListNodesResponse {
  repeated GenericNode generic = 1;
  repeated RemoteNode remote = 4;
  repeated AmazonRDSRemoteNode amazon_rds = 5;
}

message GetNodeRequest {
  // Unique Node identifier.
  string id = 1;
}

message GetNodeResponse {
  oneof node {
    GenericNode generic = 1;
    RemoteNode remote = 4;
    AmazonRDSRemoteNode amazon_rds = 5;
  }
}

message AddGenericNodeRequest {
  // Unique Node identifier (may be empty).
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  // Hostname. Is not unique.
  string hostname = 3;
}

message AddGenericNodeResponse {
  GenericNode generic = 1;
}

message AddRemoteNodeRequest {
  // Unique Node identifier (may be empty).
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  reserved 3; // hostname
}

message AddRemoteNodeResponse {
  RemoteNode remote = 1;
}

message AddAmazonRDSRemoteNodeRequest {
  // Unique Node identifier (may be empty).
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  // Hostname. Unique in combination with region. Can't be empty.
  string hostname = 3;
  // AWS region. Unique in combination with hostname. Can't be empty.
  string region = 4;
}

message AddAmazonRDSRemoteNodeResponse {
  AmazonRDSRemoteNode amazon_rds = 1;
}

message ChangeGenericNodeRequest {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  reserved 3; // hostname
}

message ChangeGenericNodeResponse {
  GenericNode generic = 1;
}

message ChangeRemoteNodeRequest {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  reserved 3; // hostname
}

message ChangeRemoteNodeResponse {
  RemoteNode remote = 1;
}

message ChangeAmazonRDSRemoteNodeRequest {
  // Unique Node identifier.
  string id = 1;
  // Unique user-defined Node name.
  string name = 2;
  reserved 3; // hostname
  reserved 4; // region
}

message ChangeAmazonRDSRemoteNodeResponse {
  AmazonRDSRemoteNode amazon_rds = 1;
}

message RemoveNodeRequest {
  string id = 1;
}

message RemoveNodeResponse {}

// Nodes service provides public methods for managing Nodes.
service Nodes {
  // ListNodes returns a list of all Nodes.
  rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/List"
      body: "*"
    };
  }
  // GetNode returns a single Node by ID.
  rpc GetNode(GetNodeRequest) returns (GetNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/Get"
      body: "*"
    };
  }
  // AddGenericNode adds bare metal Node.
  rpc AddGenericNode(AddGenericNodeRequest) returns (AddGenericNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/AddGeneric"
      body: "*"
    };
  }
  // AddRemoteNode adds remote Node.
  rpc AddRemoteNode(AddRemoteNodeRequest) returns (AddRemoteNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/AddRemote"
      body: "*"
    };
  }
  // AddAmazonRDSRemoteNode adds AWS RDS Node.
  rpc AddAmazonRDSRemoteNode(AddAmazonRDSRemoteNodeRequest) returns (AddAmazonRDSRemoteNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/AddAWSRDS"
      body: "*"
    };
  }
  // ChangeGenericNode changes bare metal Node.
  rpc ChangeGenericNode(ChangeGenericNodeRequest) returns (ChangeGenericNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/ChangeGeneric"
      body: "*"
    };
  }
  // ChangeRemoteNode changes remote Node.
  rpc ChangeRemoteNode(ChangeRemoteNodeRequest) returns (ChangeRemoteNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/ChangeRemote"
      body: "*"
    };
  }
  // ChangeAmazonRDSRemoteNode changes AWS RDS Node.
  rpc ChangeAmazonRDSRemoteNode(ChangeAmazonRDSRemoteNodeRequest) returns (ChangeAmazonRDSRemoteNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/ChangeAWSRDS"
      body: "*"
    };
  }
  // RemoveNode removes Node without any Agents and Services.
  rpc RemoveNode(RemoveNodeRequest) returns (RemoveNodeResponse) {
    option (google.api.http) = {
      post: "/v0/inventory/Nodes/Remove"
      body: "*"
    };
  }
}
